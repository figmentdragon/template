/* ROWS -------------------------------------- */
// MIXINS
	@mixin make-row($gutter: calc($BaseUnit / 5)) {
	  @if $enable-flex {
	    display: inline-flex;
	    flex-wrap: wrap;
			flex-shrink: 0;
			width: calc(100% - calc(2 * $Spacer));
			max-width: calc(100% - calc(2 * $Spacer));
			padding:calc($grid-gutter-width * 5);
			margin-top: $grid-gutter-width;
			&.row-flex {
				display: flex;
				flex-wrap: wrap;
			}
	  }
		@else {
			width: calc(100% - calc(2 * $Spacer));
			min-height: 1px;
			margin-top: calc(-1 * $gutter);
			margin-right: calc(-.5 * $gutter); //
			margin-left: calc(-.5 * $gutter);
			position: relative;
			@include box-sizing($type: border-box) ;
	    @include clearfix();
	  }
	}

	// Row columns
	// Specify on a parent element(e.g., .row) to force immediate children into NN numberof columns. Supports wrapping to new lines, but does not do a Masonry style grid.*/
	@mixin row-cols($name) {
	  @for $i from 1 through $grid-columns {
	    @if $i != 1 {
	      &-col-#{$i} {
	        float: left;
	        width: calc(100% / $i);
	        padding-right: .75rem;
	        > * {
						@if $include-column-box-sizing {
							@include box-sizing($type: border-box);
						}
						flex: 0 0 auto;
	          width: calc(100% / $i);
					}
				}
			}
		}
	}

// ------------------------------------------- \\

.row {
	list-style  : none;
	align-content: space-between;
	@include make-row($gutter: calc($BaseUnit / 5));

	&:not(.row-flex) {
		@include clearfix;
	}

	&.row-gutterless {
		margin-left : 0;
	}

	@if $enable-grid-classes {
		@include row-cols($name);
	}

	&::before,
	&::after {
		@include clearfix;
		content: "";
		display: table;
	}
}

.row .row {
	min-width: 0;
}
