//
// Base styles
//

$InputGroup-OffsetVertical  : $InputBtn-OffsetVertical !default;
$InputGroup-OffsetHorizontal: $InputBtn-OffsetHorizontal !default;
$InputGroupWeight           : $InputWeight !default;
$InputGroupText             : $InputText !default;
$InputGroupBackground       : Background($inputColor) !default;
$InputGroupBorder           : $InputBorder !default;

$InputGroupSize: 1.4rem;
$InputGroupSize-sm: 1.15rem;
$InputGroupSize-lg: 1.65rem;

.input-group {
	position: relative;

	@if $enable-flex {
		display: flex;
	} @else {
		display: table;
		// Prevent input groups from inheriting border styles from Table cells when
		// placed within a Table.
		border-collapse: separate;
	}

	.form-control {
		// Ensure that the input is always above the *appended* addon button for
		// proper border colors.
		position: relative;
		z-index: 2;
		// Bring the "active" form control to the front
		@include on-event {
			z-index: 3;
		}
		@if $enable-flex {
			flex: 1;
		} @else {
			// IE9 fubars the placeholder attribute in text inputs and the arrows on
			// select elements in input groups. To fix it, we float the input. Details:
			// https://github.com/twbs/bootstrap/issues/11561#issuecomment-28936855
			float: left;
			width: calc(100% - calc(2 * $Spacer));
		}
		margin-bottom: 0;
	}
}

.input-group-addon,
.input-group-btn,
.input-group .form-control {
	@if $enable-flex {
		// do nothing
	} @else {
		display: table-cell;
	}

	&:not(:first-child):not(:last-child) {
		border-radius: 0;
	}
}

.input-group-addon,
.input-group-btn {
	@if $enable-flex {
		// do nothing
	} @else {
		width: 1%;
	}
	white-space: nowrap;
	vertical-align: middle; // Match the inputs
}

// Sizing options
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.input-group-lg > .form-control,
.input-group-lg > .input-group-addon,
.input-group-lg > .input-group-btn > .button {
	@extend .form-control-lg;
}
.input-group-sm > .form-control,
.input-group-sm > .input-group-addon,
.input-group-sm > .input-group-btn > .button {
	@extend .form-control-sm;
}

//
// Text input groups
//

.input-group-addon {
	padding: $InputBtn-OffsetVertical $InputBtn-OffsetHorizontal;
	font-size: $InputGroupSize;
	font-weight: normal;
	line-height: 1;
	color: $InputGroupText;
	text-align: center;
	background-color: $InputGroupBackground;
	border: $BorderWidth $BorderStyle $InputGroupBorder;
	border-radius: $BorderRadius;

	// Sizing
	&.form-control-sm {
		padding: subtract($Offset, $sm) subtract($Offset, $sm);
		font-size: $FontSize-sm;
		border-radius: $BorderRadius * $sm;
	}
	&.form-control-lg {
		padding: calc($OffsetVertical + $lg) calc($OffsetHorizontal + $lg);
		font-size: $FontSize * $lg;
		border-radius: $BorderRadius * $lg;
	}

	// Nuke default margins from checkboxes and radios to vertically center within.
	input[type="radio"],
	input[type="checkbox"] {
		margin-top: 0;
	}
}

//
// Reset rounded corners
//

.input-group .form-control:first-child,
.input-group-addon:first-child,
.input-group-btn:first-child > .button,
.input-group-btn:first-child > .buttongroup > .button,
.input-group-btn:first-child > .dropdown-toggle,
.input-group-btn:last-child > .button:not(:last-child):not(.dropdown-toggle),
.input-group-btn:last-child > .buttongroup:not(:last-child) > .button {
	border-start-radius: 0;
}
.input-group-addon:first-child {
	border-right: 0;
}
.input-group .form-control:last-child,
.input-group-addon:last-child,
.input-group-btn:last-child > .button,
.input-group-btn:last-child > .buttongroup > .button,
.input-group-btn:last-child > .dropdown-toggle,
.input-group-btn:first-child > .button:not(:first-child),
.input-group-btn:first-child > .buttongroup:not(:first-child) > .button {
	border-end-radius: 0;
}
.input-group-addon:last-child {
	border-left: 0;
}

//
// Button input groups
//

.input-group-btn {
	position: relative; // Jankily prevent input button groups from wrapping with `white-space` and
	// `font-size` in combination with `inline-block` on buttons.
	font-size: 0;
	white-space: nowrap;

	// Negative margin for spacing, position for bringing hovered/focused/actived
	// element above the siblings.
	> .button {
		position: relative;
		+ .button {
			margin-left: $BorderWidth;
		}
		// Bring the "active" button to the front
		@include on-event {
			z-index: 3;
		}
	}

	// Negative margin to only have a single, shared border between the two
	&:first-child {
		> .button,
		> .buttongroup {
			margin-right: $BorderWidth;
		}
	}
	&:last-child {
		> .button,
		> .buttongroup {
			z-index: 2;
			margin-left: ($BorderWidth);
			// Because specificity
			@include on-event {
				z-index: 3;
			}
		}
	}
}
