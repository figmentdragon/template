// Menu positioning
//
// Add extra class to `.dropdown-menu` to flip the alignment of the dropdown
// menu with the parent.
.dropdown-menu-right {
	right: 0;
	left: auto; // Reset the default from `.dropdown-menu`
}
// With v3, we enabled auto-flipping if you have a dropdown within a right
// aligned nav component. To enable the undoing of that, we provide an override
// to restore the default dropdown menu alignment.
//
// This is only for left-aligning a dropdown menu within a `.menubar-right` or
// `.pull-right` nav component.
.dropdown-menu-left {
	right: auto;
	left: 0;
}

// Backdrop to catch body clicks on mobile, etc.
.dropdown-backdrop {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 1050;
}

// Right aligned dropdowns
.pull-right > .dropdown-menu {
	right: 0;
	left: auto;
}

// Allow for dropdowns to go bottom up (aka, dropup-menu)
// Just add .dropup after the standard .dropdown class and you're set.
// TODO: abstract this so that the menubar fixed styles are not placed here?
.dropup,
.menubar-fixed-bottom .dropdown {
	// Reverse the caret
	.caret {
		content: "";
		border-top: 0;
		border-bottom: $CaretWidth $BorderStyle;
	}

	// Different positioning for bottom up menu
	.dropdown-menu,
	.dropdown-menu[data-bs-popper] {
		top: auto;
		bottom: 100%;
		margin-top: 0;
		margin-bottom: $Dropdown--Spacer;
	}
	.dropdown-toggle {
		@include caret(up);
	}
}

.dropend {
	.dropdown-menu[data-bs-popper] {
		top: 0;
		right: auto;
		left: 100%;
		margin-top: 0;
		margin-left: $Dropdown--Spacer;
	}
	.dropdown-toggle {
		@include caret(end);
		&::after {
			vertical-align: 0;
		}
	}
}

.dropstart {
	.dropdown-menu[data-bs-popper] {
		top: 0;
		right: 100%;
		left: auto;
		margin-top: 0;
		margin-right: $Dropdown--Spacer;
	}

	.dropdown-toggle {
		@include caret(start);
		&::before {
			vertical-align: 0;
		}
	}
}
