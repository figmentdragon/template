// Wrapper for the slide container and indicators

// Notes on the classes:
//
// 1. .carousel.pointer-event should ideally be pan-y (to allow for users to scroll vertically)
//    even when their scroll action started on a carousel, but for compatibility (with Firefox)
//    we're preventing all actions instead
// 2. The .carousel-item-start and .carousel-item-end is used to indicate where
//    the active slide is heading.
// 3. .active.carousel-item is the current slide.
// 4. .active.carousel-item-start and .active.carousel-item-end is the current
//    slide in its in-transition state. Only one of these occurs at a time.
// 5. .carousel-item-next.carousel-item-start and .carousel-item-prev.carousel-item-end
//    is the upcoming slide in transition.

.carousel {
  position: relative;
}

.carousel-inner {
  position: relative;
  width: calc(100% - calc(2 * $Spacer));
  overflow: hidden;
  @include clearfix();

  > .carousel-item {
    position: relative;
    display: none;
    transition: 0.6s ease-in-out left;

    // Account for jankitude on images
    > img,
    > a > img {
      @extend .img-fluid;
      line-height: 1;
    }

    // WebKit CSS3 transforms for supported devices
    @media all and (transform-3d), (-webkit-transform-3d) {
      transition: transform 0.6s ease-in-out;
      backface-visibility: hidden;
      perspective: 1000px;

      &.next,
      &.active.right {
        left: 0;
        transform: translate3d(100%, 0, 0);
      }
      &.prev,
      &.active.left {
        left: 0;
        transform: translate3d(-100%, 0, 0);
      }
      &.next.left,
      &.prev.right,
      &.active {
        left: 0;
        transform: translate3d(0, 0, 0);
      }
    }
  }

  > .active,
  > .next,
  > .prev {
    display: block;
  }

  > .active {
    left: 0;
  }

  > .next,
  > .prev {
    position: absolute;
    top: 0;
    width: calc(100% - calc(2 * $Spacer));
  }

  > .next {
    left: 100%;
  }
  > .prev {
    left: -100%;
  }
  > .next.left,
  > .prev.right {
    left: 0;
  }

  > .active.left {
    left: -100%;
  }
  > .active.right {
    left: 100%;
  }
}
