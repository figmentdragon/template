// Make the div behave like a button
.buttongroup,
.buttongroup-vertical {
  position: relative;
  display: inline-flex;
  vertical-align: middle; // match .button alignment given font-size hack above

  > .button {
    position: relative;
    flex: 1 1 auto;
  }

  // Bring the hover, focused, and "active" buttons to the front to overlay
  // the borders properly
  > .button-check:checked + .button,
  > .button-check:focus + .button,
  > .button:hover,
  > .button:focus,
  > .button:active,
  > .button.active {
    z-index: 1;
  }
}

// Optional: Group multiple button groups together for a toolbar
.button-toolbar {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;

  .input-group {
    width: auto;
  }
}

.buttongroup {
  @include border-radius($ButtonRadius);

  // Prevent double borders when buttons are next to each other
  > :not(.button-check:first-child) + .button,
  > .buttongroup:not(:first-child) {
    margin-left: $BorderWidth;
  }

  // Reset rounded corners
  > .button:not(:last-child):not(.dropdown-toggle),
  > .button.dropdown-toggle-split:first-child,
  > .buttongroup:not(:last-child) > .button {
    @include border-end-radius(0);
  }

  // The left radius should be 0 if the button is:
  // - the "third or more" child
  // - the second child and the previous element isn't `.button-check` (making it the first child visually)
  // - part of a Button-group which isn't the first child
  > .button:nth-child(n + 3),
  > :not(.button-check) + .button,
  > .buttongroup:not(:first-child) > .button {
    @include border-start-radius(0);
  }
}

// Sizing
//
// Remix the default button sizing classes into new ones for easier manipulation.

.buttongroup-sm > .button { @extend .button-sm; }
.buttongroup-lg > .button { @extend .button-lg; }


//
// Split button dropdowns
//

.dropdown-toggle-split {
  padding-right: $Button-OffsetHorizontal * .75;
  padding-left: $Button-OffsetHorizontal * .75;

  &::after,
  .dropup &::after,
  .dropend &::after {
    margin-left: 0;
  }

  .dropstart &::before {
    margin-right: 0;
  }
}

.button-sm + .dropdown-toggle-split {
  padding-right: $Button-OffsetHorizontal-sm * .75;
  padding-left: $Button-OffsetHorizontal-sm * .75;
}

.button-lg + .dropdown-toggle-split {
  padding-right: $Button-OffsetHorizontal-lg * .75;
  padding-left: $Button-OffsetHorizontal-lg * .75;
}


// The clickable button for toggling the menu
// Set the same inset shadow as the :active state
.buttongroup.show .dropdown-toggle {
  @include box-shadow($Button-BoxShadow);

  // Show no shadow for `.button-link` since it has no other button styles.
  &.button-link {
    @include box-shadow(none);
  }
}


//
// Vertical button groups
//

.buttongroup-vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;

  > .button,
  > .buttongroup {
    width: calc(100% - calc(2 * $Spacer));
  }

  > .button:not(:first-child),
  > .buttongroup:not(:first-child) {
    margin-top: $BorderWidth;
  }

  // Reset rounded corners
  > .button:not(:last-child):not(.dropdown-toggle),
  > .buttongroup:not(:last-child) > .button {
    @include border-bottom-radius(0);
  }

  > .button ~ .button,
  > .buttongroup:not(:first-child) > .button {
    @include border-top-radius(0);
  }
}
