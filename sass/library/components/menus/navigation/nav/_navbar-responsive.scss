// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.NavBar--collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}

// Button for toggling the navbar when in its collapsed state
.NavBar--toggler {
  padding: $MenuBar--toggler--OffsetVertical $MenuBar--toggler--OffsetHorizontal;
  @include font-size($MenuBar--toggler-font-size);
  line-height: 1;
  background-color: transparent; // remove default button style
  border: $base-width solid transparent; // remove default button style
  @include border-radius($MenuBar--toggler-border-radius);
  @include Transition($MenuBar--togglerTransition);

  &:hover {
    text-decoration: none;
  }

  &:focus {
    text-decoration: none;
    outline: 0;
    box-shadow: 0 0 0 $MenuBar--toggler-focus-width;
  }
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
.NavBar--toggler-icon {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: center;
  background-size: 100%;
}

.NavBar--nav-scroll {
  max-height: var(--#{$prefix}scroll-height, 75vh);
  overflow-y: auto;
}

// Generate series of `.NavBar--expand-*` responsive classes for configuring
// where your navbar collapses.
.NavBar--expand {
  @each $breakpoint in map-keys($media-breakpoints) {
    $next: breakpoint-next($breakpoint, $media-breakpoints);
    $infix: breakpoint-infix($next, $media-breakpoints);

    // stylelint-disable-next-line scss/selector-no-union-class-name
    &#{$infix} {
      @include media-breakpoint-up($next) {
        flex-wrap: nowrap;
        justify-content: flex-start;

        .NavBar--nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .nav-link {
            padding-right: $MenuBar--nav-link--OffsetHorizontal;
            padding-left: $MenuBar--nav-link--OffsetHorizontal;
          }
        }

        .NavBar--nav-scroll {
          overflow: visible;
        }

        .NavBar--collapse {
          display: flex !important; // stylelint-disable-line declaration-no-important
          flex-basis: auto;
        }

        .NavBar--toggler {
          display: none;
        }

        .OffCanvas--header {
          display: none;
        }

        .offcanvas {
          position: inherit;
          bottom: 0;
          z-index: auto;
          flex-grow: 1;
          visibility: visible !important; // stylelint-disable-line declaration-no-important
          background-color: transparent;
          border-right: 0;
          border-left: 0;
          @include box-shadow(none);
          @include Transition(none);
          transform: none;
        }
        .OffCanvas--top,
        .OffCanvas--bottom {
          height: auto;
          border-top: 0;
          border-bottom: 0;
        }

        .OffCanvas--body {
          display: flex;
          flex-grow: 0;
          padding: 0;
          overflow-y: visible;
        }
      }
    }
  }
}
