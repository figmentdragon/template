@use "./../../../01-configsheets/theme.Core";

    //Define the general, utility, and theme colors general colors
    $blue       : #0000FF !default; //info
    $indigo     : #4B0082 !default; //footer
    $purple     : #800080 !default; //card
    $pink       : #FFC0CB !default; //code
    $red        : #FF0000 !default; //danger
    $orange     : #FFA500 !default; //warning
    $yellow     : #FFFF00 !default;
    $green      : #00FF00 !default; //success
    $teal       : #008080 !default; //input
    $cyan       : #00FFFF !default; //quote
    $gray       : #93A5BE !default;
    $darkgray   : #4E4E4E !default;

    // utility colors
    $white      : #E6EEF5 !default;
    $black      : #000000 !default;
    $success    : #00FF00 !default; //green
    $info       : #0000FF !default; //blue
    $warning    : #FFA500 !default; //orange
    $danger     : #FF0000 !default; //red

    // theme colors
    $primary    : #FFFF00 !default;
    $secondary  : #0000B2 !default;
    $accent     : #B2B200 !default;
    $tertiary   : #0000FF !default;

    // element & component colors
    $codeColor       : $pink !default;
    $formColor      : $teal !default;
    $cardColor       : $purple !default;
    $quoteColor      : $cyan !default;
    $footerColor     : $indigo !default;

    $textColor       : $primary !default;
    $titleColor      : $primary !default;

    $borderColor     : $secondary !default;
    $linkColor       : $tertiary !default;
    $navColor        : $tertiary !default;
    $buttonColor     : $tertiary !default;

$colors: () !default;
$colors: (
  'blue'       : $blue,
  'indigo'     : $indigo,
  'purple'     : $purple,
  'pink'       : $pink,
  'red'        : $red,
  'orange'     : $orange,
  'yellow'     : $yellow,
  'green'      : $green,
  'teal'       : $teal,
  'cyan'       : $cyan,
  'gray'       : $gray,
  'darkgray'   : $darkgray
);

$utilities-colors: () !default;
$utilities-colors: (
  'white'      : $white,
  'black'      : $black,
  'success'    : $success,
  'info'       : $info,
  'warning'    : $warning,
  'danger'     : $danger
);

$theme-colors: () !default;
$theme-colors: (
  'primary'    : $primary,
  'secondary'  : $secondary,
  'accent'     : $accent,
  'tertiary'   : $tertiary
);

$component-colors: () !default;
$component-colors: (
  'codeColor'       : $codeColor,
  'inputColor'      : $formColor,
  'cardColor'       : $cardColor,
  'quoteColor'      : $quoteColor,
  'footerColor'     : $footerColor,
  'borderColor'     : $borderColor,
  'linkColor'       : $linkColor,
  'navColor'        : $navColor,
  'buttonColor'     : $buttonColor
);

$colors             : ();
@function create_color_map($color, $percentage, $opacity) {
  $map              : (
    base            : $color,
    light           : lighten($color, $percentage),
    dark            : darken($color, $percentage),
    trans           : transparentize($color, $opacity)
  );
  @return $map;
}

@each $key, $value in $colors {
  $map              : ();
  $map              : map-merge(
    $map,
    (
      $key          : create_color_map($value, 15%, 0.5)
    )
  );
  $colors           : map-merge($colors-map, $map);
}

$theme-colors       : ();
@function create_color_map($theme-colors, $percentage, $opacity) {
  $theme-colors-map : (
    base            : $theme-colors,
    light           : lighten($theme-colors, $percentage),
    dark            : darken($theme-colors, $percentage),
    trans           : transparentize($theme-colors, $opacity)
  );
  @return $theme-colors-map;
}

@each $key, $value in $theme-colors {
  $map              : ();
  $theme-colors     : map-merge($map, $key, create_color_map($value, 5%, 0.5));
  $theme-colors-map : map-merge($theme-colors, $map);
}

$custom-colors      : ();
@function create_color_map($custom-colors, $percentage, $opacity) {
  $custom-colors-map: (
    base            : $custom-colors,
    light           : lighten($custom-colors, $percentage),
    dark            : shade-color($custom-colors, $percentage),
    trans           : transparentize($custom-colors, $opacity)
  );
  @return $custom-colors-map;
}

@each $key, $value in $custom-colors {
  $map              : ();
  $custom-colors    : map-merge($map, $key, create_color_map($value, 5%, 0.5));
  $custom-colors-map: map-merge($custom-colors, $map);
}
