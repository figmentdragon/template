//
// Checkboxes and radios
//

/* Form */
$form--check-input-width: 1em;
$form--check-input-height: $FontSize * $LineHeight;
$form--check-input-active-filter: brightness(90%);
$form--check-input-bg-color: $FormBackground;
$form--check-input-border-radius: 0.25em;
$form--check-BorderWidth: 0.125rem;
$form--check-input-border-color: $FormBorder;
$form--check-Offset-start: $form--check-input-width + 0.5em;
$form--check-margin-bottom: 0.125rem;
$form--check-label-color: null;
$form--check-label-cursor: null;
$form--check-transition: null;

/* Form Focus */
$form--check-input-focus-before-transform: scale(1);
$form--check-input-focus-before-transition: box-shadow 0.2s, transform 0.2s;
$form--check-input-focus-border-color: rgba($FormBorder, calc($ColorInterval / 10));
$form--check-input-focus-transition: border-color 0.2s;
$form--check-input-focus-border: 5;
$form--check-input-BoxShadow-focus: $FormShadow-focus;

/* Form Hover */
$form--check-input-hover-before-opacity: 0.04;
$form--check-input-hover-before-box-shadow: 0 0 0 13px rgba($BorderColor, 0.6);

/* Form Focus Before */
$form--check-input-focus-before-opacity: 0.12;
$form--check-input-focus-before-box-shadow: $form--check-input-hover-before-box-shadow;
$form--check-input-focus-before-transform: scale(1);
$form--check-input-focus-before-transition: box-shadow 0.2s, transform 0.2s;

/* Form Before */
$form--check-input-before-box-shadow: 0 0 0 13px transparent;
$form--check-input-before-border-radius: 50%;
$form--check-input-before-width: 0.875rem;
$form--check-input-before-height: $form--check-input-before-width;
$form--check-input-before-transform: scale(0);
$form--check-input-before-box-shadow: 0 0 0 13px transparent;

/* Form Checked */
$form--check-input-checked-border-color: Border($info);
$form--check-input-checked-color: mix(black, $FormLink, $ColorInterval);
$form--check-input-checked-bg-color: Background($form--check-input-checked-color);

/* Form Checked Focus */
$form--check-input-checked-focus-border-color: HoverShift($info);

/* Form CHecked Focus Before */
$form--check-input-checked-focus-before-box-shadow: 0 0 0 13px $ShadowInfo;
$form--check-input-checked-focus-before-transform: $form--check-input-focus-before-transform;
$form--check-input-checked-focus-before-transition: $form--check-input-focus-before-transition;


/* Form Checked Before */
$form--check-input-checked-before-opacity: 0.16;
$form--check-input-checked-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$form--check-input-checked-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/></svg>");
$form--check-radio-checked-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'><circle r='2' fill='#{$form--check-input-checked-color}'/></svg>");
$form--check-input-indeterminate-color: $warning;
$form--check-input-indeterminate-bg-color: mix(white, $form--check-input-indeterminate-color, $TextInterval);
$form--check-input-indeterminate-border-color: mix(black, $form--check-input-indeterminate-color, $ColorInterval);
$form--check-input-indeterminate-bg-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'><path fill='none' stroke='#{$form--check-input-indeterminate-color}' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/></svg>");
$form--check-input-disabled-opacity: 0.5;
$form--check-label-disabled-opacity: $form--check-input-disabled-opacity;
$form--check-btn-check-disabled-opacity: $DisabledOpacity;
$form--check-inline-margin-end: 1rem;

/* Form Checkbox */
$form--check-input-checkbox-border-radius: 0.125rem;
$form--check-input-checkbox-focus-after-width: 0.875rem;
$form--check-input-checkbox-focus-after-height: $form--check-input-checkbox-focus-after-width;
$form--check-input-checkbox-focus-after-background-color: $white;
$form--check-input-checkbox-checked-background-color: Background($info);
$form--check-input-checkbox-checked-focus-background-color: Background($info);
$form--check-input-checkbox-checked-after-transform: rotate(45deg);
$form--check-input-checkbox-checked-afterBorderWidth: 0.125rem;
$form--check-input-checkbox-checked-after-border-color: $white;
$form--check-input-checkbox-checked-after-width: 0.375rem;
$form--check-input-checkbox-checked-after-height: 0.8125rem;
$form--check-input-checkbox-checked-after-margin-left: 0.25rem;
$form--check-input-checkbox-checked-after-margin-top: -1px;


/* Form Radio */
$form--check-input-radio-border-radius: 50%;
$form--check-input-radio-width: 1.25rem;
$form--check-input-radio-height: $form--check-input-radio-width;
$form--check-input-radio-before-width: 1rem;
$form--check-input-radio-before-height: $form--check-input-radio-before-width;
$form--check-input-radio-after-width: $form--check-input-radio-before-width;
$form--check-input-radio-after-height: $form--check-input-radio-after-width;
$form--check-input-radio-after-border-radius: $form--check-input-radio-border-radius;
$form--check-input-radio-after-background-color: $white;
$form--check-input-radio-checked-background-color: $white;
$form--check-input-radio-checked-after-border-radius: $form--check-input-radio-border-radius;
$form--check-input-radio-checked-after-width: 0.625rem;
$form--check-input-radio-checked-after-height: $form--check-input-radio-checked-after-width;
$form--check-input-radio-checked-after-border-color: Border($info);
$form--check-input-radio-checked-after-background-color: Background($info);
$form--check-input-radio-checked-after-margin-top: 0.1875rem;
$form--check-input-radio-checked-after-margin-left: 0.1875rem;
$form--check-input-radio-checked-after-transition: border-color;
$form--check-input-radio-checked-focus-background-color: $white;

/* Form Indeterminate */
$form--check-input-indeterminate-focus-before-box-shadow: 0 0 0 13px $ShadowInfo;
$form--check-input-indeterminate-checked-background-color: Background($info);
$form--check-input-indeterminate-checked-after-transform: rotate(90deg);
$form--check-input-indeterminate-checked-afterBorderWidth: 0.125rem;
$form--check-input-indeterminate-checked-after-border-color: $white;
$form--check-input-indeterminate-checked-after-width: 0.125rem;
$form--check-input-indeterminate-checked-after-height: 0.875rem;
$form--check-input-indeterminate-checked-after-margin-left: 0.375rem;
$form--check-input-indeterminate-focus-background-color: Background($info);
$form--check-input-indeterminate-focus-border-color: HoverShift($info);
$form--check-input-indeterminate-border-color: Border($info);



/* Form Focus */


$form--check-radio-border-radius: 50%;

.form-check {
  display: block;

  min-height: 1.5rem;
  margin-bottom: $form--check-margin-bottom;
  padding-left: $form--check-Offset-start;

  .form-check-input {
    float: left;

    margin-left: $form--check-Offset-start * -1;
  }
}

.form-check-input {
  position: relative;

  width: $form--check-input-width;
  height: $form--check-input-height;
  margin-top: (1.2 - $form--check-input-width) * 0.5; // line-height minus check height

  vertical-align: top;

  border: $form--check-input-border-color;
  background-color: $form--check-input-bg-color;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;

  appearance: none;
  color-adjust: exact; // Keep themed appearance for print
  @include Transition($form--check-transition);

  &[type="checkbox"] {
    @include border-radius($form--check-input-border-radius);
  }

  &[type="radio"] {
    // stylelint-disable-next-line property-disallowed-list
    border-radius: $form--check-radio-border-radius;
  }

  &:active {
    filter: $form--check-input-active-filter;
  }

  &:focus {
    border-color: $form--check-input-focus-border;
    outline: 0;
    box-shadow: $form--check-input-BoxShadow-focus;
  }

  &:checked {
    border-color: $form--check-input-checked-border-color;
    background-color: $form--check-input-checked-bg-color;
    &:before {
      position: absolute;

      width: $form--check-input-before-width;
      height: $form--check-input-before-height;

      content: "";
      transform: $form--check-input-before-transform;

      pointer-events: none;

      opacity: 0;
      border-radius: $form--check-input-before-border-radius;
      background-color: transparent;
      box-shadow: $form--check-input-before-box-shadow;
    }

    &:hover {
      cursor: pointer;

      &:before {
        opacity: $form--check-input-hover-before-opacity;
        box-shadow: $BoxShadow;
      }
    }

    &:focus {
      transition: $form--check-input-focus-transition;

      border-color: $form--check-input-focus-border-color;
      box-shadow: none;

      &:before {
        transition: $form--check-input-focus-before-transition;
        transform: $form--check-input-focus-before-transform;

        opacity: $form--check-input-focus-before-opacity;
        box-shadow: $form--check-input-focus-before-box-shadow;
      }
    }

    &:checked {
      border-color: $form--check-input-checked-border-color;

      &:before {
        opacity: $form--check-input-checked-before-opacity;
      }

      &:after {
        position: absolute;

        content: "";
      }

      &:focus {
        border-color: $form--check-input-checked-focus-border-color;

        &:before {
          transition: $form--check-input-checked-focus-before-transition;
          transform: $form--check-input-checked-focus-before-transform;

          box-shadow: $form--check-input-checked-focus-before-box-shadow;
        }
      }
    }

    &:indeterminate {
      &:focus {
        &:before {
          box-shadow: $form--check-input-indeterminate-focus-before-box-shadow;
        }
      }
    }

    &[type="checkbox"] {
      margin-top: 0.19em;
      margin-right: 8px;

      border-radius: $form--check-input-checkbox-border-radius;
      &:focus {
        &:after {
          position: absolute;
          z-index: 1;

          display: block;

          width: $form--check-input-checkbox-focus-after-width;
          height: $form--check-input-checkbox-focus-after-height;

          content: "";

          border-radius: 0;
          background-color: $form--check-input-checkbox-focus-after-background-color;
        }
      }

      &:checked {
        background-color: $form--check-input-checkbox-checked-background-color;
        background-image: none;

        &:after {
          display: block;

          width: $form--check-input-checkbox-checked-after-width;
          height: $form--check-input-checkbox-checked-after-height;
          margin-top: $form--check-input-checkbox-checked-after-margin-top;
          margin-left: $form--check-input-checkbox-checked-after-margin-left;

          transform: $form--check-input-checkbox-checked-after-transform /*!rtl:ignore*/;

          border-width: $form--check-input-checkbox-checked-afterBorderWidth;
          border-style: $BorderStyle;
          border-color: $form--check-input-checkbox-checked-after-border-color;
          border-top: 0;
          border-left: 0 /*!rtl:ignore*/;
          background-color: transparent;
        }

        &:focus {
          background-color: $form--check-input-checkbox-checked-focus-background-color;
        }
      }

      &:indeterminate {
        border-color: $form--check-input-indeterminate-focus-border-color;
      }

      @if $enable-gradients {
        background-image: escape-svg($form--check-input-checked-bg-image),
        var($gradient);
      } @else {
        background-image: escape-svg($form--check-input-checked-bg-image);
      }
    }

    &[type="radio"] {
      width: $form--check-input-radio-width;
      height: $form--check-input-radio-height;
      margin-top: 0.125em;
      margin-right: 6px;

      border-radius: $form--check-input-radio-border-radius;

      &:before {
        width: $form--check-input-radio-before-width;
        height: $form--check-input-radio-before-height;
      }

      @if $enable-gradients {
        background-image: escape-svg($form--check-radio-checked-bg-image),
        var($gradient);
      } @else {
        background-image: escape-svg($form--check-radio-checked-bg-image);
      }
    }

    &:after {
      position: absolute;
      z-index: 1;

      display: block;

      width: $form--check-input-radio-after-width;
      height: $form--check-input-radio-after-height;

      content: "";

      border-radius: $form--check-input-radio-after-border-radius;
      background-color: $form--check-input-radio-after-background-color;
    }

    &:checked {
      background-color: $form--check-input-radio-checked-background-color;
      background-image: none;

      &:after {
        position: absolute;
        top: 50%;
        left: 50%;

        width: $form--check-input-radio-checked-after-width;
        height: $form--check-input-radio-checked-after-height;

        transition: $form--check-input-radio-checked-after-transition;
        transform: translate(-50%, -50%);

        border-color: $form--check-input-radio-checked-after-border-color;
        border-radius: $form--check-input-radio-checked-after-border-radius;
        background-color: $form--check-input-radio-checked-after-background-color;
      }

      &:focus {
        background-color: $form--check-input-radio-checked-focus-background-color;
      }
    }
  }

  &[type="checkbox"]:indeterminate {
    border-color: $form--check-input-indeterminate-border-color;
    background-color: $form--check-input-indeterminate-bg-color;

    @if $enable-gradients {
      background-image: escape-svg($form--check-input-indeterminate-bg-image),
      var($gradient);
    } @else {
      background-image: escape-svg($form--check-input-indeterminate-bg-image);
    }
  }

  &:disabled {
    pointer-events: none;

    opacity: $form--check-input-disabled-opacity;

    filter: none;
  }

  // Use disabled attribute in addition of :disabled pseudo-class
  // See: https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    ~ .form-check-label {
      opacity: $form--check-label-disabled-opacity;
    }
  }
}

.form-check-label {
  cursor: $form--check-label-cursor;

  color: $form--check-label-color;
  &:hover {
    cursor: pointer;
  }
}


// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.radio,
.checkbox {
  position: relative;

  display: block;
  // margin-top:    ($Spacer * .75);

  margin-bottom: ($Spacer * 0.75);

  label {
    font-weight: normal;

    margin-bottom: 0;
    padding-left: 1.25rem;

    cursor: pointer;

    // When there's no labels, don't position the input.
    input:only-child {
      position: static;
    }
  }
}
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;

  margin-top: 0.25rem;
  // margin-top: 4px \9;
  margin-left: -1.25rem;
}

.radio + .radio,
.checkbox + .checkbox {
  // Move up sibling radios or checkboxes for tighter spacing
  margin-top: -0.25rem;
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  position: relative;

  font-weight: normal;

  display: inline-block;

  margin-bottom: 0;
  padding-left: 1.25rem;

  cursor: pointer;

  vertical-align: middle;
}
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 0.75rem;
}

// Apply same disabled cursor tweak as for inputs
// Some special care is needed because <label>s don't inherit their parent's `cursor`.
//
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"] {
  &:disabled,
  &.disabled {
    cursor: cursor-disabled;
  }
}
// These classes are used directly on <label>s
.radio-inline,
.checkbox-inline {
  &.disabled {
    cursor: cursor-disabled;
  }
}
// These classes are used on elements with <label> descendants
.radio,
.checkbox {
  &.disabled {
    label {
      cursor: cursor-disabled;
    }
  }
}
